[2023-08-06 19:24:19,199] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2023-08-06 19:24:19,282] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 26 become-follower partitions (state.change.logger)
[2023-08-06 19:24:19,285] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1) for 26 partitions (state.change.logger)
[2023-08-06 19:24:19,372] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 26 partitions (state.change.logger)
[2023-08-06 19:24:19,390] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-22 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,391] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,392] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-46 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,396] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,397] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,400] INFO [Controller id=1 epoch=5] Partition topic_name-0 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,401] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-38 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,401] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,401] INFO [Controller id=1 epoch=5] Partition btc_prices-0 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,402] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-26 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,403] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-34 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,404] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-3 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,404] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-8 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,406] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-4 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,406] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-16 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,409] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-28 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,410] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,410] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,410] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-2 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,411] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,413] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-14 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,414] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-20 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,414] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,415] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-44 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,416] INFO [Controller id=1 epoch=5] Partition eth_prices-0 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,417] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,417] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-10 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,418] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-32 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,418] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-37 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,419] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-40 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-06 19:24:19,422] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 1 become-follower partitions (state.change.logger)
[2023-08-06 19:24:19,422] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-7 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,423] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1) for 28 partitions (state.change.logger)
[2023-08-06 19:24:19,423] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-41 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,426] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-29 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,427] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-33 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,429] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-19 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,430] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-23 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,433] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-11 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,434] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-45 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,435] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-15 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,435] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-49 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,437] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-35 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,439] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-5 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,440] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-39 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,443] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-9 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,444] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-27 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,445] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-31 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,448] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-1 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,449] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-21 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,450] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-25 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,450] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-43 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,451] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition topic_name-0 (last update controller epoch 3) but cannot become follower since the new leader 2 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,453] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-13 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,455] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-47 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,457] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-17 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,461] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 5 with correlation id 1 for 0 partitions (state.change.logger)
[2023-08-06 19:24:19,475] INFO [Broker id=1] Finished LeaderAndIsr request in 105ms correlationId 1 from controller 1 for 26 partitions (state.change.logger)
[2023-08-06 19:24:19,489] INFO [Broker id=1] Add 26 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-08-06 19:24:19,493] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 for 1 partitions (state.change.logger)
[2023-08-06 19:24:19,493] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition topic_name-0 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-06 19:24:19,496] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 5 with correlation id 3 for 0 partitions (state.change.logger)
[2023-08-06 19:24:19,496] INFO [Broker id=1] Finished LeaderAndIsr request in 3ms correlationId 3 from controller 1 for 1 partitions (state.change.logger)
[2023-08-06 19:24:19,501] INFO [Broker id=1] Add 28 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-08-06 19:24:19,547] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,550] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,550] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition topic_name-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition topic_name-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,552] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,552] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition btc_prices-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition btc_prices-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,553] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,554] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,554] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,555] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,556] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,556] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,557] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,558] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,558] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,559] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,559] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,560] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,561] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,561] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,563] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,565] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,565] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition eth_prices-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition eth_prices-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,566] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,567] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,567] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,568] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,568] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,568] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-06 19:24:19,571] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-25 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,571] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-35 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,571] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-37 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,571] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-13 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,572] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-21 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,572] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-27 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,572] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-7 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,572] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-9 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,573] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-41 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,573] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-33 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,574] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-23 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,574] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-49 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,574] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-47 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,574] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-31 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,574] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-3 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,574] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-15 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,574] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-17 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,575] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-19 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,575] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-11 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,575] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-43 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,575] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-39 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,575] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-45 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,576] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,576] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-5 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,576] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-29 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-06 19:24:19,577] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 1 with 25 become-leader and 0 become-follower partitions (state.change.logger)
[2023-08-06 19:24:19,578] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1) for 25 partitions (state.change.logger)
[2023-08-06 19:24:19,580] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 for 25 partitions (state.change.logger)
[2023-08-06 19:24:19,585] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 1 epoch 5 as part of the become-leader transition for 25 partitions (state.change.logger)
[2023-08-06 19:24:19,593] INFO [Broker id=1] Leader __consumer_offsets-3 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,610] INFO [Broker id=1] Leader __consumer_offsets-37 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,616] INFO [Broker id=1] Leader __consumer_offsets-7 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,627] INFO [Broker id=1] Leader __consumer_offsets-41 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,634] INFO [Broker id=1] Leader __consumer_offsets-29 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,640] INFO [Broker id=1] Leader __consumer_offsets-33 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,647] INFO [Broker id=1] Leader __consumer_offsets-19 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,653] INFO [Broker id=1] Leader __consumer_offsets-23 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,659] INFO [Broker id=1] Leader __consumer_offsets-11 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 1 with partition epoch 2, high watermark 1, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,660] INFO [Broker id=1] Leader __consumer_offsets-45 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,666] INFO [Broker id=1] Leader __consumer_offsets-15 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,672] INFO [Broker id=1] Leader __consumer_offsets-49 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,677] INFO [Broker id=1] Leader __consumer_offsets-35 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,683] INFO [Broker id=1] Leader __consumer_offsets-5 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,689] INFO [Broker id=1] Leader __consumer_offsets-39 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,695] INFO [Broker id=1] Leader __consumer_offsets-9 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,701] INFO [Broker id=1] Leader __consumer_offsets-27 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,706] INFO [Broker id=1] Leader __consumer_offsets-31 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,712] INFO [Broker id=1] Leader __consumer_offsets-1 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,718] INFO [Broker id=1] Leader __consumer_offsets-21 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,724] INFO [Broker id=1] Leader __consumer_offsets-25 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,730] INFO [Broker id=1] Leader __consumer_offsets-43 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,739] INFO [Broker id=1] Leader __consumer_offsets-13 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,747] INFO [Broker id=1] Leader __consumer_offsets-47 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,755] INFO [Broker id=1] Leader __consumer_offsets-17 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-06 19:24:19,790] INFO [Broker id=1] Finished LeaderAndIsr request in 210ms correlationId 5 from controller 1 for 25 partitions (state.change.logger)
[2023-08-06 19:24:19,795] INFO [Broker id=1] Add 25 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
